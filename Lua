pcall(function()
    if game["Run Service"]:IsStudio() then
        game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Synth"):Destroy()
    end
end)

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local Info = TweenInfo.new(0.1, Enum.EasingStyle.Sine)
local function Tween(Object, Properties, Info2)
    local Tw = TweenService:Create(Object, Info2 or Info, Properties)
    Tw:Play()
    return Tw
end

local lib = {
    Window = function(WindowName, Size)
        local Size = Size or UDim2.fromOffset(570, 340)
        
        local SynthUI = Instance.new("ScreenGui")
        local MainContainer = Instance.new("Frame")
        local Border = Instance.new("Frame")
        local RealContainer = Instance.new("Frame")
        local TopBar = Instance.new("Frame")
        local Banner = Instance.new("ImageLabel")
        local UICorner = Instance.new("UICorner")
        local NavBar = Instance.new("Frame")
        local UICorner_2 = Instance.new("UICorner")
        local TabsImage = Instance.new("ImageLabel")
        local CornerFix = Instance.new("Frame")
        local Tabs = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local UICorner_3 = Instance.new("UICorner")
        local CornerArch = Instance.new("ImageLabel")
        local UICorner_4 = Instance.new("UICorner")
        local UIGradient_2 = Instance.new("UIGradient")
        local UICorner_5 = Instance.new("UICorner")
        local UICorner_6 = Instance.new("UICorner")
        local CloseButton = Instance.new("TextButton")
        local PlayerImage = Instance.new("ImageLabel")
        local Watermark = Instance.new("TextLabel")

        SynthUI.Name = "Synth"
        SynthUI.Parent = RunService:IsStudio() and Players.LocalPlayer.PlayerGui or game.CoreGui
        SynthUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        SynthUI.ResetOnSpawn = false

        MainContainer.Name = "MainContainer"
        MainContainer.Parent = SynthUI
        MainContainer.AnchorPoint = Vector2.new(0.5, 0.5)
        MainContainer.BackgroundColor3 = Color3.fromRGB(44, 45, 44)
        MainContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
        MainContainer.BorderSizePixel = 0
        MainContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
        MainContainer.Size = Size
        MainContainer.Active = true
        
        local function AddRipple(Button)
            local Clickbox
            if Button:IsA("TextButton") then 
                Clickbox = Button
            else
                Clickbox = Instance.new("TextButton", Button)
                Clickbox.Text = ""
                Clickbox.Size = UDim2.fromScale(1, 1)
                Clickbox.ZIndex = 2
                Clickbox.BackgroundTransparency = 1
            end
            Clickbox.MouseButton1Click:Connect(function()
                task.spawn(function()
                    local mouse = Players.LocalPlayer:GetMouse()
                    local Ripple = Instance.new("Frame", Button)
                    Ripple.Position = UDim2.fromOffset(mouse.X - Button.AbsolutePosition.X, mouse.Y - Button.AbsolutePosition.Y)
                    Ripple.BackgroundColor3 = Color3.fromRGB(33, 97, 200)
                    Ripple.Size = UDim2.fromOffset(0, 0)
                    Ripple.AnchorPoint = Vector2.new(0.5, 0.5)

                    local Corner = Instance.new("UICorner", Ripple)
                    Corner.CornerRadius = UDim.new(1, 0)

                    Tween(Ripple, {Size = UDim2.fromOffset(50, 50)}, TweenInfo.new(0.76, Enum.EasingStyle.Quint))
                    Tween(Ripple, {BackgroundTransparency = 1}, TweenInfo.new(0.76, Enum.EasingStyle.Quint))
                    game.Debris:AddItem(Ripple, 0.76)
                end)
            end)
            Button.ClipsDescendants = true
        end

        Border.Name = "Border"
        Border.Parent = MainContainer
        Border.AnchorPoint = Vector2.new(0.5, 0.5)
        Border.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Border.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Border.BorderSizePixel = 0
        Border.Position = UDim2.new(0.5, 0, 0.5, 0)
        Border.Size = UDim2.new(1, -8, 1, -8)

        RealContainer.Name = "RealContainer"
        RealContainer.Parent = Border
        RealContainer.AnchorPoint = Vector2.new(0.5, 0.5)
        RealContainer.BackgroundColor3 = Color3.fromRGB(44, 45, 44)
        RealContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
        RealContainer.BorderSizePixel = 0
        RealContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
        RealContainer.Size = UDim2.new(1, -4, 1, -4)

        TopBar.Name = "TopBar"
        TopBar.Parent = RealContainer
        TopBar.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
        TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TopBar.BorderSizePixel = 0
        TopBar.Position = UDim2.new(0, 5, 0, 5)
        TopBar.Size = UDim2.new(1, -10, 0, 35)

        Banner.Name = "Banner"
        Banner.Parent = TopBar
        Banner.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Banner.BackgroundTransparency = 1.000
        Banner.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Banner.BorderSizePixel = 0
        Banner.Position = UDim2.new(0, 5, 0, 5)
        Banner.Size = UDim2.new(0, 200, 0, 25)
        Banner.Font = Enum.Font.GothamBold
        Banner.Text = WindowName or "Synth UI"
        Banner.TextColor3 = Color3.fromRGB(220, 220, 220)
        Banner.TextSize = 14.000
        Banner.TextXAlignment = Enum.TextXAlignment.Left

        UICorner.CornerRadius = UDim.new(0, 6)
        UICorner.Parent = TopBar

        -- Close button for mobile
        CloseButton.Name = "CloseButton"
        CloseButton.Parent = TopBar
        CloseButton.AnchorPoint = Vector2.new(1, 0.5)
        CloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CloseButton.BackgroundTransparency = 1.000
        CloseButton.Position = UDim2.new(1, -5, 0.5, 0)
        CloseButton.Size = UDim2.new(0, 20, 0, 20)
        CloseButton.Font = Enum.Font.GothamBold
        CloseButton.Text = "X"
        CloseButton.TextColor3 = Color3.fromRGB(220, 220, 220)
        CloseButton.TextSize = 14.000
        CloseButton.Visible = false -- Only visible on mobile
        
        -- Show close button on mobile
        if UserInputService.TouchEnabled then
            CloseButton.Visible = true
            CloseButton.MouseButton1Click:Connect(function()
                SynthUI.Enabled = not SynthUI.Enabled
            end)
        end

        NavBar.Name = "NavBar"
        NavBar.Parent = RealContainer
        NavBar.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
        NavBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
        NavBar.BorderSizePixel = 0
        NavBar.Position = UDim2.new(0, 5, 0, 40)
        NavBar.Size = UDim2.new(0, 135, 1, -45)

        UICorner_2.CornerRadius = UDim.new(0, 6)
        UICorner_2.Parent = NavBar

        TabsImage.Name = "TabsImage"
        TabsImage.Parent = NavBar
        TabsImage.BackgroundColor3 = Color3.fromRGB(126, 126, 126)
        TabsImage.BackgroundTransparency = 1.000
        TabsImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TabsImage.BorderSizePixel = 0
        TabsImage.Position = UDim2.new(0, 5, 0, 5)
        TabsImage.Size = UDim2.new(0, 60, 0, 15)
        TabsImage.Font = Enum.Font.GothamBold
        TabsImage.Text = "TABS"
        TabsImage.TextColor3 = Color3.fromRGB(156, 156, 156)
        TabsImage.TextSize = 12.000
        TabsImage.TextXAlignment = Enum.TextXAlignment.Left

        CornerFix.Name = "CornerFix"
        CornerFix.Parent = NavBar
        CornerFix.AnchorPoint = Vector2.new(1, 0)
        CornerFix.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
        CornerFix.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CornerFix.BorderSizePixel = 0
        CornerFix.Position = UDim2.new(1, 0, 0, 0)
        CornerFix.Size = UDim2.new(0, 4, 0, 4)

        Tabs.Name = "Tabs"
        Tabs.Parent = NavBar
        Tabs.Active = true
        Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tabs.BackgroundTransparency = 1.000
        Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Tabs.BorderSizePixel = 0
        Tabs.Position = UDim2.new(0, 5, 0, 30)
        Tabs.Size = UDim2.new(1, -20, 1, -35)
        Tabs.ScrollBarThickness = 0
        Tabs.AutomaticCanvasSize = Enum.AutomaticSize.Y

        UIListLayout.Parent = Tabs
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 3)

        UICorner_3.CornerRadius = UDim.new(0, 6)
        UICorner_3.Parent = RealContainer

        CornerArch.Name = "CornerArch"
        CornerArch.Parent = RealContainer
        CornerArch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        CornerArch.BackgroundTransparency = 1.000
        CornerArch.BorderColor3 = Color3.fromRGB(0, 0, 0)
        CornerArch.BorderSizePixel = 0
        CornerArch.Position = UDim2.new(0, 137, 0, 37)
        CornerArch.Size = UDim2.new(0, 15, 0, 15)
        CornerArch.Image = "rbxassetid://117509933334518"
        CornerArch.ImageColor3 = Color3.fromRGB(39, 40, 39)
        CornerArch.Visible = false

        UIGradient_2.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0.00, Color3.fromRGB(44, 174, 255)), 
            ColorSequenceKeypoint.new(0.42, Color3.fromRGB(82, 212, 255)), 
            ColorSequenceKeypoint.new(0.47, Color3.fromRGB(42, 92, 255)), 
            ColorSequenceKeypoint.new(0.52, Color3.fromRGB(82, 212, 255)), 
            ColorSequenceKeypoint.new(1.00, Color3.fromRGB(123, 253, 255))
        }
        UIGradient_2.Rotation = -180
        UIGradient_2.Parent = Border

        UICorner_5.CornerRadius = UDim.new(0, 6)
        UICorner_5.Parent = Border

        UICorner_6.Parent = MainContainer
        
        -- Player profile image
        PlayerImage.Name = "PlayerImage"
        PlayerImage.Parent = RealContainer
        PlayerImage.AnchorPoint = Vector2.new(0, 1)
        PlayerImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PlayerImage.BackgroundTransparency = 1.000
        PlayerImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PlayerImage.BorderSizePixel = 0
        PlayerImage.Position = UDim2.new(0, 5, 1, -5)
        PlayerImage.Size = UDim2.new(0, 30, 0, 30)
        PlayerImage.Image = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("Head") and Players.LocalPlayer.Character.Head:FindFirstChildOfClass("Decal") and Players.LocalPlayer.Character.Head:FindFirstChildOfClass("Decal").Texture or "rbxassetid://0"
        PlayerImage.ImageColor3 = Color3.fromRGB(255, 255, 255)
        
        -- Watermark
        Watermark.Name = "Watermark"
        Watermark.Parent = RealContainer
        Watermark.AnchorPoint = Vector2.new(0, 1)
        Watermark.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Watermark.BackgroundTransparency = 1.000
        Watermark.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Watermark.BorderSizePixel = 0
        Watermark.Position = UDim2.new(0, 40, 1, -5)
        Watermark.Size = UDim2.new(0, 200, 0, 30)
        Watermark.Font = Enum.Font.GothamBold
        Watermark.Text = "Synth UI | v1.0"
        Watermark.TextColor3 = Color3.fromRGB(220, 220, 220)
        Watermark.TextSize = 12.000
        Watermark.TextXAlignment = Enum.TextXAlignment.Left

        -- Dragging functionality
        local function dragify(Drag, Frame)
            local dragToggle = nil
            local dragSpeed = 0.08
            local dragInput = nil
            local dragStart = nil
            local dragPos = nil
            local Delta, Position, startPos
            
            local function updateInput(input)
                Delta = input.Position - dragStart
                Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
                TweenService:Create(Frame, TweenInfo.new(dragSpeed), {Position = Position}):Play()
            end
            
            Drag.InputBegan:Connect(function(input)
                if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UserInputService:GetFocusedTextBox() == nil then
                    dragToggle = true
                    dragStart = input.Position
                    startPos = Frame.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragToggle = false
                        end
                    end)
                end
            end)
            
            Drag.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragToggle then
                    updateInput(input)
                end
            end)
        end
        
        dragify(TopBar, MainContainer)
        
        -- Animate gradient
        spawn(function()
            while task.wait() do
                local rotation = UIGradient_2.Rotation
                if rotation == 180 then
                    rotation = -181
                else    
                    rotation = rotation + 1
                end
                UIGradient_2.Rotation = rotation
            end
        end)
        
        local TabsTable = {}
        
        return {
            Tab = function(name)
                local TabFrame = Instance.new("Frame")
                local TextLabel = Instance.new("TextButton")
                local UIGradient = Instance.new("UIGradient")
                local TabContent = Instance.new("Frame")
                local ScrollingFrame = Instance.new("ScrollingFrame")
                local UIListLayout_2 = Instance.new("UIListLayout")
                
                TabFrame.Name = name
                TabFrame.Parent = Tabs
                TabFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TabFrame.BackgroundTransparency = 1.000
                TabFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TabFrame.BorderSizePixel = 0
                TabFrame.Size = UDim2.new(1, 0, 0, 21)

                TextLabel.Parent = TabFrame
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TextLabel.BorderSizePixel = 0
                TextLabel.Size = UDim2.new(1, 0, 1, 0)
                TextLabel.Font = Enum.Font.GothamBold
                TextLabel.Text = name
                TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
                TextLabel.TextSize = 14.000
                TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                UIGradient.Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(44, 174, 255)), 
                    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(123, 253, 255))
                }
                UIGradient.Rotation = -180
                UIGradient.Parent = TextLabel
                UIGradient.Enabled = false
                
                TabContent.Name = name.."Content"
                TabContent.Parent = RealContainer
                TabContent.BackgroundColor3 = Color3.fromRGB(41, 42, 41)
                TabContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TabContent.BorderSizePixel = 0
                TabContent.Position = UDim2.new(0, 147, 0, 47)
                TabContent.Size = UDim2.new(1, -160, 1, -57)
                TabContent.Visible = false

                UICorner_4.Parent = TabContent

                ScrollingFrame.Parent = TabContent
                ScrollingFrame.Active = true
                ScrollingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ScrollingFrame.BackgroundTransparency = 1.000
                ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ScrollingFrame.BorderSizePixel = 0
                ScrollingFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                ScrollingFrame.Size = UDim2.new(1, -10, 1, -10)
                ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
                ScrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
                ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(93, 93, 93)
                ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
                ScrollingFrame.CanvasSize = UDim2.fromScale(0, 0)

                UIListLayout_2.Parent = ScrollingFrame
                UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
                UIListLayout_2.Padding = UDim.new(0, 6)
                
                local Tcount = #TabsTable + 1
                local TabData = {
                    frame = TabFrame,
                    content = TabContent,
                }
                TabsTable[Tcount] = TabData
                
                local function onclick()
                    TabContent.Visible = true
                    UIGradient.Enabled = true
                    local Tw = Tween(TextLabel, {Position = UDim2.fromOffset(4, 0)})
                    Tw.Completed:Once(function(Playback)
                        Tween(TextLabel, {Position = UDim2.fromOffset(0, 0)})
                    end)
                    
                    for i, Tab in pairs(TabsTable) do
                        if Tab ~= TabsTable[Tcount] then
                            Tween(Tab.frame.TextButton, {Position = UDim2.fromOffset(0, 0)})
                            Tab.frame.TextButton.UIGradient.Enabled = false
                            Tab.content.Visible = false
                        end
                    end
                end
                
                if Tcount == 1 then
                    onclick()
                end
                
                TextLabel.MouseButton1Click:Connect(onclick)
                
                return {
                    Section = function(name, alignment)
                        local Section = Instance.new("Frame")
                        local SectionLabel = Instance.new("TextLabel")
                        local Divider = Instance.new("Frame")
                        local UICorner = Instance.new("UICorner")
                        
                        Section.Name = "Section"
                        Section.Parent = ScrollingFrame
                        Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        Section.BackgroundTransparency = 1.000
                        Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Section.BorderSizePixel = 0
                        Section.Size = UDim2.new(1, -17, 0, 21)

                        SectionLabel.Name = "SectionLabel"
                        SectionLabel.Parent = Section
                        SectionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        SectionLabel.BackgroundTransparency = 1.000
                        SectionLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        SectionLabel.BorderSizePixel = 0
                        SectionLabel.Size = UDim2.new(1, 0, 1, 0)
                        SectionLabel.Font = Enum.Font.GothamBold
                        SectionLabel.Text = name
                        SectionLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
                        SectionLabel.TextSize = 14.000
                        
                        -- Set alignment
                        if alignment == "Center" then
                            SectionLabel.TextXAlignment = Enum.TextXAlignment.Center
                        elseif alignment == "Right" then
                            SectionLabel.TextXAlignment = Enum.TextXAlignment.Right
                        else -- Default to Left
                            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
                        end

                        Divider.Name = "Divider"
                        Divider.Parent = Section
                        Divider.AnchorPoint = Vector2.new(0, 1)
                        Divider.BackgroundColor3 = Color3.fromRGB(52, 164, 216)
                        Divider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Divider.BorderSizePixel = 0
                        Divider.Position = UDim2.new(0, 0, 1, 0)
                        Divider.Size = UDim2.new(1, 0, 0, 1)

                        UICorner.Parent = Divider
                        
                        return {
                            Toggle = function(name, callback, default)
                                local Enabled = default or false
                                local Toggle = Instance.new("Frame")
                                local UICorner = Instance.new("UICorner")
                                local TextLabel = Instance.new("TextLabel")
                                local ToggleFrame = Instance.new("Frame")
                                local UICorner_2 = Instance.new("UICorner")
                                local ToggleButton = Instance.new("Frame")
                                local UICorner_3 = Instance.new("UICorner")

                                Toggle.Name = "Toggle"
                                Toggle.Parent = ScrollingFrame
                                Toggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Toggle.BorderSizePixel = 0
                                Toggle.Size = UDim2.new(1, -17, 0, 30)

                                UICorner.CornerRadius = UDim.new(0, 4)
                                UICorner.Parent = Toggle

                                TextLabel.Parent = Toggle
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Position = UDim2.new(0, 8, 0, 0)
                                TextLabel.Size = UDim2.new(1, -100, 1, 0)
                                TextLabel.Font = Enum.Font.GothamBold
                                TextLabel.Text = name
                                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.TextSize = 14.000
                                TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                                ToggleFrame.Parent = Toggle
                                ToggleFrame.AnchorPoint = Vector2.new(1, 0.5)
                                ToggleFrame.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
                                ToggleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ToggleFrame.BorderSizePixel = 0
                                ToggleFrame.Position = UDim2.new(1, -8, 0.5, 0)
                                ToggleFrame.Size = UDim2.new(0, 50, 0, 21)

                                UICorner_2.CornerRadius = UDim.new(1, 0)
                                UICorner_2.Parent = ToggleFrame

                                ToggleButton.Parent = ToggleFrame
                                ToggleButton.AnchorPoint = Vector2.new(0, 0.5)
                                ToggleButton.BackgroundColor3 = Color3.fromRGB(47, 148, 198)
                                ToggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ToggleButton.BorderSizePixel = 0
                                ToggleButton.Position = UDim2.new(0, 5, 0.5, 0)
                                ToggleButton.Size = UDim2.new(0, 15, 0, 15)

                                UICorner_3.CornerRadius = UDim.new(1, 0)
                                UICorner_3.Parent = ToggleButton
                                
                                if default then
                                    ToggleFrame.BackgroundColor3 = Color3.fromRGB(46, 47, 46)
                                    ToggleButton.BackgroundColor3 = Color3.fromRGB(52, 164, 216)
                                    ToggleButton.Position = UDim2.new(1, -20, 0.5, 0)
                                end
                                
                                local Clickbox = Instance.new("TextButton", Toggle)
                                Clickbox.Text = ""
                                Clickbox.Size = UDim2.fromScale(1, 1)
                                Clickbox.ZIndex = 2
                                Clickbox.BackgroundTransparency = 1
                                Clickbox.MouseButton1Click:Connect(function()
                                    Enabled = not Enabled
                                    local Tweens = {
                                        [true] = {
                                            function()
                                                Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(46, 47, 46)})
                                            end,
                                            function()
                                                Tween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(52, 164, 216), Position = UDim2.new(1, -20, 0.5, 0)})
                                            end,
                                        },
                                        [false] = {
                                            function()
                                                Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(39, 40, 39)})
                                            end,
                                            function()
                                                Tween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(47, 148, 198), Position = UDim2.new(0, 5, 0.5, 0)})
                                            end,
                                        }
                                    }
                                    for i, TweenFunc in pairs(Tweens[Enabled]) do
                                        TweenFunc()
                                    end
                                    callback(Enabled)
                                end)
                                
                                AddRipple(Clickbox)
                                
                                return {
                                    Set = function(value)
                                        Enabled = value
                                        local Tweens = {
                                            [true] = {
                                                function()
                                                    Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(46, 47, 46)})
                                                end,
                                                function()
                                                    Tween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(52, 164, 216), Position = UDim2.new(1, -20, 0.5, 0)})
                                                end,
                                            },
                                            [false] = {
                                                function()
                                                    Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(39, 40, 39)})
                                                end,
                                                function()
                                                    Tween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(47, 148, 198), Position = UDim2.new(0, 5, 0.5, 0)})
                                                end,
                                            }
                                        }
                                        for i, TweenFunc in pairs(Tweens[Enabled]) do
                                            TweenFunc()
                                        end
                                    end
                                }
                            end,
                            Button = function(name, callback)
                                local Button = Instance.new("Frame")
                                local UICorner = Instance.new("UICorner")
                                local TextLabel = Instance.new("TextLabel")
                                local ImageLabel = Instance.new("ImageLabel")
                                
                                Button.Name = "Button"
                                Button.Parent = ScrollingFrame
                                Button.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Button.BorderSizePixel = 0
                                Button.Size = UDim2.new(1, -17, 0, 30)
                                Button.ClipsDescendants = true

                                UICorner.CornerRadius = UDim.new(0, 4)
                                UICorner.Parent = Button

                                TextLabel.Parent = Button
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Position = UDim2.new(0, 8, 0, 0)
                                TextLabel.Size = UDim2.new(1, -100, 1, 0)
                                TextLabel.Font = Enum.Font.GothamBold
                                TextLabel.Text = name
                                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.TextSize = 14.000
                                TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                                ImageLabel.Parent = Button
                                ImageLabel.AnchorPoint = Vector2.new(1, 0.5)
                                ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                ImageLabel.BackgroundTransparency = 1.000
                                ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ImageLabel.BorderSizePixel = 0
                                ImageLabel.Position = UDim2.new(1, -8, 0.5, 0)
                                ImageLabel.Size = UDim2.new(0, 20, 0, 20)
                                ImageLabel.Image = "rbxassetid://81903642911217"
                                ImageLabel.ImageColor3 = Color3.fromRGB(52, 164, 216)
                                
                                local Clickbox = Instance.new("TextButton", Button)
                                Clickbox.Text = ""
                                Clickbox.Size = UDim2.fromScale(1, 1)
                                Clickbox.ZIndex = 2
                                Clickbox.BackgroundTransparency = 1
                                Clickbox.MouseButton1Click:Connect(function()
                                    (callback or function() end)()
                                end)
                                
                                AddRipple(Clickbox)
                            end,
                            Slider = function(name, min, max, def, callback)
                                local Slider = Instance.new("Frame")
                                local TextLabel = Instance.new("TextLabel")
                                local SliderTrack = Instance.new("Frame")
                                local UICorner = Instance.new("UICorner")
                                local SliderFill = Instance.new("Frame")
                                local UICorner_2 = Instance.new("UICorner")
                                local ValueLabel = Instance.new("TextLabel")

                                Slider.Name = "Slider"
                                Slider.Parent = ScrollingFrame
                                Slider.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Slider.BorderSizePixel = 0
                                Slider.Size = UDim2.new(1, -17, 0, 30)

                                TextLabel.Parent = Slider
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Position = UDim2.new(0, 8, 0, 0)
                                TextLabel.Size = UDim2.new(1, -100, 1, 0)
                                TextLabel.Font = Enum.Font.GothamBold
                                TextLabel.Text = name
                                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.TextSize = 14.000
                                TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                                SliderTrack.Parent = Slider
                                SliderTrack.AnchorPoint = Vector2.new(1, 0.5)
                                SliderTrack.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
                                SliderTrack.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                SliderTrack.BorderSizePixel = 0
                                SliderTrack.Position = UDim2.new(1, -8, 0.5, 0)
                                SliderTrack.Size = UDim2.new(0, 100, 0, 15)

                                UICorner.CornerRadius = UDim.new(1, 0)
                                UICorner.Parent = SliderTrack

                                SliderFill.Parent = SliderTrack
                                SliderFill.BackgroundColor3 = Color3.fromRGB(47, 148, 198)
                                SliderFill.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                SliderFill.BorderSizePixel = 0
                                SliderFill.Size = UDim2.new((def - min) / (max - min), 0, 1, 0)

                                UICorner_2.CornerRadius = UDim.new(1, 0)
                                UICorner_2.Parent = SliderFill

                                ValueLabel.Parent = SliderTrack
                                ValueLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                ValueLabel.BackgroundTransparency = 1.000
                                ValueLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ValueLabel.BorderSizePixel = 0
                                ValueLabel.Size = UDim2.new(1, 0, 1, 0)
                                ValueLabel.Font = Enum.Font.GothamBold
                                ValueLabel.Text = tostring(def)
                                ValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                ValueLabel.TextSize = 14.000
                                
                                local ClickBox = Instance.new("TextButton")
                                ClickBox.Parent = SliderTrack
                                ClickBox.Text = ""
                                ClickBox.BackgroundTransparency = 1
                                ClickBox.ZIndex = 1
                                ClickBox.Size = UDim2.fromScale(1, 1)
                                
                                local Dragging = false
                                local Last
                                ClickBox.MouseButton1Down:Connect(function()
                                    Dragging = true
                                    while Dragging do
                                        local Percent = math.clamp((Players.LocalPlayer:GetMouse().X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
                                        local Value = min + (Percent * (max - min))
                                        Value = math.floor(Value)
                                        TweenService:Create(SliderFill, TweenInfo.new(0.1, Enum.EasingStyle.Quint), {Size = UDim2.fromScale(Percent, 1)}):Play()
                                        if Value ~= Last then
                                            ValueLabel.Text = tostring(Value)
                                            Last = Value
                                            (callback or function() end)(Value)
                                        end
                                        task.wait()
                                    end
                                end)
                                
                                UserInputService.InputEnded:Connect(function(Key)
                                    if Key.UserInputType == Enum.UserInputType.MouseButton1 or Key.UserInputType == Enum.UserInputType.Touch then
                                        Dragging = false
                                    end
                                end)
                                
                                return {
                                    Set = function(value)
                                        local Percent = math.clamp((value - min) / (max - min), 0, 1)
                                        TweenService:Create(SliderFill, TweenInfo.new(0.1, Enum.EasingStyle.Quint), {Size = UDim2.fromScale(Percent, 1)}):Play()
                                        ValueLabel.Text = tostring(value)
                                    end
                                }
                            end,
                            Dropdown = function(name, options, default, callback)
                                local Dropdown = Instance.new("Frame")
                                local TextLabel = Instance.new("TextLabel")
                                local Arrow = Instance.new("ImageLabel")
                                local SelectedLabel = Instance.new("TextLabel")
                                local DropdownList = Instance.new("ScrollingFrame")
                                local UIListLayout = Instance.new("UIListLayout")
                                
                                Dropdown.Name = "Dropdown"
                                Dropdown.Parent = ScrollingFrame
                                Dropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Dropdown.BorderSizePixel = 0
                                Dropdown.Size = UDim2.new(1, -17, 0, 30)
                                Dropdown.AutomaticSize = Enum.AutomaticSize.Y
                                Dropdown.ClipsDescendants = true

                                TextLabel.Parent = Dropdown
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Position = UDim2.new(0, 8, 0, 0)
                                TextLabel.Size = UDim2.new(1, -100, 0, 30)
                                TextLabel.Font = Enum.Font.GothamBold
                                TextLabel.Text = name
                                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.TextSize = 14.000
                                TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                                Arrow.Parent = Dropdown
                                Arrow.AnchorPoint = Vector2.new(1, 0)
                                Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                Arrow.BackgroundTransparency = 1.000
                                Arrow.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Arrow.BorderSizePixel = 0
                                Arrow.Position = UDim2.new(1, -8, 0, 6)
                                Arrow.Size = UDim2.new(0, 20, 0, 20)
                                Arrow.Image = "rbxassetid://70441862151102"
                                Arrow.ImageColor3 = Color3.fromRGB(52, 164, 216)
                                Arrow.Rotation = 0

                                SelectedLabel.Parent = Dropdown
                                SelectedLabel.AnchorPoint = Vector2.new(1, 0)
                                SelectedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                SelectedLabel.BackgroundTransparency = 1.000
                                SelectedLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                SelectedLabel.BorderSizePixel = 0
                                SelectedLabel.Position = UDim2.new(1, -35, 0, 0)
                                SelectedLabel.Size = UDim2.new(0, 100, 0, 30)
                                SelectedLabel.Font = Enum.Font.GothamBold
                                SelectedLabel.Text = tostring(default or options[1])
                                SelectedLabel.TextColor3 = Color3.fromRGB(52, 164, 216)
                                SelectedLabel.TextSize = 14.000
                                SelectedLabel.TextXAlignment = Enum.TextXAlignment.Right

                                DropdownList.Parent = Dropdown
                                DropdownList.Active = true
                                DropdownList.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
                                DropdownList.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                DropdownList.BorderSizePixel = 0
                                DropdownList.Position = UDim2.new(0, 0, 0, 30)
                                DropdownList.Size = UDim2.new(1, 0, 0, 0)
                                DropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
                                DropdownList.ScrollBarThickness = 5
                                DropdownList.ScrollBarImageColor3 = Color3.fromRGB(52, 164, 216)
                                DropdownList.Visible = false

                                UIListLayout.Parent = DropdownList
                                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                                UIListLayout.Padding = UDim.new(0, 2)
                                
                                local IsOpen = false
                                local Selected = default or options[1]
                                
                                local function UpdateDropdownSize()
                                    local totalHeight = 0
                                    for _, child in ipairs(DropdownList:GetChildren()) do
                                        if child:IsA("TextButton") then
                                            totalHeight = totalHeight + child.Size.Y.Offset + UIListLayout.Padding.Offset
                                        end
                                    end
                                    
                                    DropdownList.Size = UDim2.new(1, 0, 0, math.min(totalHeight, 150))
                                    DropdownList.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
                                end
                                
                                local function ToggleDropdown()
                                    IsOpen = not IsOpen
                                    Arrow.Rotation = IsOpen and 180 or 0
                                    DropdownList.Visible = IsOpen
                                    
                                    if IsOpen then
                                        Dropdown.Size = UDim2.new(1, -17, 0, 30 + DropdownList.Size.Y.Offset)
                                    else
                                        Dropdown.Size = UDim2.new(1, -17, 0, 30)
                                    end
                                end
                                
                                -- Populate dropdown
                                for _, option in ipairs(options) do
                                    local OptionButton = Instance.new("TextButton")
                                    OptionButton.Name = tostring(option)
                                    OptionButton.Parent = DropdownList
                                    OptionButton.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                    OptionButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                    OptionButton.BorderSizePixel = 0
                                    OptionButton.Size = UDim2.new(1, 0, 0, 25)
                                    OptionButton.Font = Enum.Font.Gotham
                                    OptionButton.Text = tostring(option)
                                    OptionButton.TextColor3 = Color3.fromRGB(220, 220, 220)
                                    OptionButton.TextSize = 14.000
                                    OptionButton.AutoButtonColor = false
                                    
                                    OptionButton.MouseButton1Click:Connect(function()
                                        Selected = option
                                        SelectedLabel.Text = tostring(option)
                                        ToggleDropdown()
                                        if callback then callback(option) end
                                    end)
                                    
                                    AddRipple(OptionButton)
                                end
                                
                                UpdateDropdownSize()
                                
                                local DropdownButton = Instance.new("TextButton", Dropdown)
                                DropdownButton.Text = ""
                                DropdownButton.Size = UDim2.new(1, 0, 0, 30)
                                DropdownButton.ZIndex = 2
                                DropdownButton.BackgroundTransparency = 1
                                DropdownButton.MouseButton1Click:Connect(ToggleDropdown)
                                
                                AddRipple(DropdownButton)
                                
                                return {
                                    Set = function(option)
                                        if table.find(options, option) then
                                            Selected = option
                                            SelectedLabel.Text = tostring(option)
                                            if callback then callback(option) end
                                        end
                                    end,
                                    Refresh = function(newOptions)
                                        -- Clear existing options
                                        for _, child in ipairs(DropdownList:GetChildren()) do
                                            if child:IsA("TextButton") then
                                                child:Destroy()
                                            end
                                        end
                                        
                                        -- Add new options
                                        for _, option in ipairs(newOptions) do
                                            local OptionButton = Instance.new("TextButton")
                                            OptionButton.Name = tostring(option)
                                            OptionButton.Parent = DropdownList
                                            OptionButton.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                            OptionButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                            OptionButton.BorderSizePixel = 0
                                            OptionButton.Size = UDim2.new(1, 0, 0, 25)
                                            OptionButton.Font = Enum.Font.Gotham
                                            OptionButton.Text = tostring(option)
                                            OptionButton.TextColor3 = Color3.fromRGB(220, 220, 220)
                                            OptionButton.TextSize = 14.000
                                            OptionButton.AutoButtonColor = false
                                            
                                            OptionButton.MouseButton1Click:Connect(function()
                                                Selected = option
                                                SelectedLabel.Text = tostring(option)
                                                ToggleDropdown()
                                                if callback then callback(option) end
                                            end)
                                            
                                            AddRipple(OptionButton)
                                        end
                                        
                                        UpdateDropdownSize()
                                    end
                                }
                            end,
                            ColorPicker = function(name, default, callback)
                                local ColorPicker = Instance.new("Frame")
                                local TextLabel = Instance.new("TextLabel")
                                local Preview = Instance.new("Frame")
                                local UICorner = Instance.new("UICorner")
                                local PickerFrame = Instance.new("Frame")
                                local ColorMap = Instance.new("ImageLabel")
                                local ColorCursor = Instance.new("Frame")
                                local UICorner_2 = Instance.new("UICorner")
                                local HueSlider = Instance.new("Frame")
                                local UICorner_3 = Instance.new("UICorner")
                                local UIGradient = Instance.new("UIGradient")
                                local HueCursor = Instance.new("Frame")
                                local UICorner_4 = Instance.new("UICorner")
                                local RGBBox = Instance.new("TextBox")
                                local UICorner_5 = Instance.new("UICorner")
                                local HexBox = Instance.new("TextBox")
                                local UICorner_6 = Instance.new("UICorner")
                                
                                ColorPicker.Name = "ColorPicker"
                                ColorPicker.Parent = ScrollingFrame
                                ColorPicker.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                ColorPicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ColorPicker.BorderSizePixel = 0
                                ColorPicker.Size = UDim2.new(1, -17, 0, 30)
                                ColorPicker.AutomaticSize = Enum.AutomaticSize.Y
                                
                                TextLabel.Parent = ColorPicker
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Position = UDim2.new(0, 8, 0, 0)
                                TextLabel.Size = UDim2.new(1, -100, 0, 30)
                                TextLabel.Font = Enum.Font.GothamBold
                                TextLabel.Text = name
                                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.TextSize = 14.000
                                TextLabel.TextXAlignment = Enum.TextXAlignment.Left
                                
                                Preview.Name = "Preview"
                                Preview.Parent = ColorPicker
                                Preview.AnchorPoint = Vector2.new(1, 0.5)
                                Preview.BackgroundColor3 = default or Color3.fromRGB(255, 0, 0)
                                Preview.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Preview.BorderSizePixel = 0
                                Preview.Position = UDim2.new(1, -8, 0.5, 0)
                                Preview.Size = UDim2.new(0, 50, 0, 21)
                                
                                UICorner.CornerRadius = UDim.new(0, 4)
                                UICorner.Parent = Preview
                                
                                PickerFrame.Name = "PickerFrame"
                                PickerFrame.Parent = ColorPicker
                                PickerFrame.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
                                PickerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                PickerFrame.BorderSizePixel = 0
                                PickerFrame.Position = UDim2.new(0, 0, 0, 30)
                                PickerFrame.Size = UDim2.new(1, 0, 0, 120)
                                PickerFrame.Visible = false
                                
                                ColorMap.Name = "ColorMap"
                                ColorMap.Parent = PickerFrame
                                ColorMap.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                ColorMap.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ColorMap.BorderSizePixel = 0
                                ColorMap.Position = UDim2.new(0, 5, 0, 5)
                                ColorMap.Size = UDim2.new(0, 100, 0, 100)
                                ColorMap.Image = "rbxassetid://2615689005"
                                
                                ColorCursor.Name = "ColorCursor"
                                ColorCursor.Parent = ColorMap
                                ColorCursor.AnchorPoint = Vector2.new(0.5, 0.5)
                                ColorCursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                ColorCursor.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                ColorCursor.BorderSizePixel = 0
                                ColorCursor.Position = UDim2.new(0.5, 0, 0.5, 0)
                                ColorCursor.Size = UDim2.new(0, 6, 0, 6)
                                
                                UICorner_2.CornerRadius = UDim.new(1, 0)
                                UICorner_2.Parent = ColorCursor
                                
                                HueSlider.Name = "HueSlider"
                                HueSlider.Parent = PickerFrame
                                HueSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                HueSlider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                HueSlider.BorderSizePixel = 0
                                HueSlider.Position = UDim2.new(0, 110, 0, 5)
                                HueSlider.Size = UDim2.new(0, 15, 0, 100)
                                
                                UICorner_3.CornerRadius = UDim.new(0, 4)
                                UICorner_3.Parent = HueSlider
                                
                                UIGradient.Color = ColorSequence.new{
                                    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
                                    ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 0, 255)),
                                    ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 0, 255)),
                                    ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),
                                    ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 255, 0)),
                                    ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 0)),
                                    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))
                                }
                                UIGradient.Rotation = 90
                                UIGradient.Parent = HueSlider
                                
                                HueCursor.Name = "HueCursor"
                                HueCursor.Parent = HueSlider
                                HueCursor.AnchorPoint = Vector2.new(0.5, 0)
                                HueCursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                HueCursor.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                HueCursor.BorderSizePixel = 0
                                HueCursor.Position = UDim2.new(0.5, 0, 0, 0)
                                HueCursor.Size = UDim2.new(1, 2, 0, 4)
                                
                                UICorner_4.CornerRadius = UDim.new(0, 2)
                                UICorner_4.Parent = HueCursor
                                
                                RGBBox.Name = "RGBBox"
                                RGBBox.Parent = PickerFrame
                                RGBBox.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                RGBBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                RGBBox.BorderSizePixel = 0
                                RGBBox.Position = UDim2.new(0, 130, 0, 5)
                                RGBBox.Size = UDim2.new(0, 60, 0, 20)
                                RGBBox.Font = Enum.Font.Gotham
                                RGBBox.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
                                RGBBox.PlaceholderText = "RGB"
                                RGBBox.Text = ""
                                RGBBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                                RGBBox.TextSize = 14.000
                                
                                UICorner_5.CornerRadius = UDim.new(0, 4)
                                UICorner_5.Parent = RGBBox
                                
                                HexBox.Name = "HexBox"
                                HexBox.Parent = PickerFrame
                                HexBox.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                HexBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                HexBox.BorderSizePixel = 0
                                HexBox.Position = UDim2.new(0, 130, 0, 30)
                                HexBox.Size = UDim2.new(0, 60, 0, 20)
                                HexBox.Font = Enum.Font.Gotham
                                HexBox.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
                                HexBox.PlaceholderText = "Hex"
                                HexBox.Text = ""
                                HexBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                                HexBox.TextSize = 14.000
                                
                                UICorner_6.CornerRadius = UDim.new(0, 4)
                                UICorner_6.Parent = HexBox
                                
                                local IsOpen = false
                                local CurrentColor = default or Color3.fromRGB(255, 0, 0)
                                local Hue = 0
                                local Sat = 1
                                local Val = 1
                                
                                local function UpdateColor()
                                    CurrentColor = Color3.fromHSV(Hue, Sat, Val)
                                    Preview.BackgroundColor3 = CurrentColor
                                    if callback then callback(CurrentColor) end
                                    
                                    -- Update RGB and Hex boxes
                                    local r, g, b = math.floor(CurrentColor.r * 255), math.floor(CurrentColor.g * 255), math.floor(CurrentColor.b * 255)
                                    RGBBox.Text = string.format("%d, %d, %d", r, g, b)
                                    HexBox.Text = string.format("#%02X%02X%02X", r, g, b)
                                end
                                
                                local function SetColorFromRGB(r, g, b)
                                    Hue, Sat, Val = Color3.toHSV(Color3.fromRGB(r, g, b))
                                    CurrentColor = Color3.fromHSV(Hue, Sat, Val)
                                    UpdateColor()
                                    
                                    -- Update cursor positions
                                    ColorCursor.Position = UDim2.new(Sat, 0, 1 - Val, 0)
                                    HueCursor.Position = UDim2.new(0.5, 0, Hue, 0)
                                end
                                
                                local function TogglePicker()
                                    IsOpen = not IsOpen
                                    PickerFrame.Visible = IsOpen
                                    
                                    if IsOpen then
                                        ColorPicker.Size = UDim2.new(1, -17, 0, 150)
                                    else
                                        ColorPicker.Size = UDim2.new(1, -17, 0, 30)
                                    end
                                end
                                
                                -- Initialize with default color
                                if default then
                                    Hue, Sat, Val = Color3.toHSV(default)
                                    ColorCursor.Position = UDim2.new(Sat, 0, 1 - Val, 0)
                                    HueCursor.Position = UDim2.new(0.5, 0, Hue, 0)
                                    UpdateColor()
                                end
                                
                                -- Color map interaction
                                local ColorMapDragging = false
                                ColorMap.InputBegan:Connect(function(input)
                                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                        ColorMapDragging = true
                                    end
                                end)
                                
                                ColorMap.InputEnded:Connect(function(input)
                                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                        ColorMapDragging = false
                                    end
                                end)
                                
                                UserInputService.InputChanged:Connect(function(input)
                                    if ColorMapDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                                        local mousePos = UserInputService:GetMouseLocation()
                                        local mapPos = ColorMap.AbsolutePosition
                                        local mapSize = ColorMap.AbsoluteSize
                                        
                                        local x = math.clamp((mousePos.X - mapPos.X) / mapSize.X, 0, 1)
                                        local y = math.clamp((mousePos.Y - mapPos.Y) / mapSize.Y, 0, 1)
                                        
                                        Sat = x
                                        Val = 1 - y
                                        ColorCursor.Position = UDim2.new(x, 0, y, 0)
                                        UpdateColor()
                                    end
                                end)
                                
                                -- Hue slider interaction
                                local HueDragging = false
                                HueSlider.InputBegan:Connect(function(input)
                                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                        HueDragging = true
                                    end
                                end)
                                
                                HueSlider.InputEnded:Connect(function(input)
                                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                        HueDragging = false
                                    end
                                end)
                                
                                UserInputService.InputChanged:Connect(function(input)
                                    if HueDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                                        local mousePos = UserInputService:GetMouseLocation()
                                        local sliderPos = HueSlider.AbsolutePosition
                                        local sliderSize = HueSlider.AbsoluteSize
                                        
                                        Hue = math.clamp((mousePos.Y - sliderPos.Y) / sliderSize.Y, 0, 1)
                                        HueCursor.Position = UDim2.new(0.5, 0, Hue, 0)
                                        UpdateColor()
                                    end
                                end)
                                
                                -- RGB box input
                                RGBBox.FocusLost:Connect(function()
                                    local text = RGBBox.Text
                                    local parts = {}
                                    for part in string.gmatch(text, "%d+") do
                                        table.insert(parts, tonumber(part))
                                    end
                                    
                                    if #parts == 3 then
                                        local r = math.clamp(parts[1], 0, 255)
                                        local g = math.clamp(parts[2], 0, 255)
                                        local b = math.clamp(parts[3], 0, 255)
                                        SetColorFromRGB(r, g, b)
                                    end
                                end)
                                
                                -- Hex box input
                                HexBox.FocusLost:Connect(function()
                                    local text = HexBox.Text
                                    if string.sub(text, 1, 1) == "#" then
                                        text = string.sub(text, 2)
                                    end
                                    
                                    if #text == 6 then
                                        local r = tonumber(string.sub(text, 1, 2), 16) or 0
                                        local g = tonumber(string.sub(text, 3, 4), 16) or 0
                                        local b = tonumber(string.sub(text, 5, 6), 16) or 0
                                        SetColorFromRGB(r, g, b)
                                    end
                                end)
                                
                                -- Toggle button
                                local ToggleButton = Instance.new("TextButton", ColorPicker)
                                ToggleButton.Text = ""
                                ToggleButton.Size = UDim2.new(1, 0, 0, 30)
                                ToggleButton.BackgroundTransparency = 1
                                ToggleButton.ZIndex = 2
                                ToggleButton.MouseButton1Click:Connect(TogglePicker)
                                
                                AddRipple(ToggleButton)
                                
                                return {
                                    Set = function(color)
                                        if typeof(color) == "Color3" then
                                            Hue, Sat, Val = Color3.toHSV(color)
                                            CurrentColor = color
                                            UpdateColor()
                                            
                                            -- Update cursor positions
                                            ColorCursor.Position = UDim2.new(Sat, 0, 1 - Val, 0)
                                            HueCursor.Position = UDim2.new(0.5, 0, Hue, 0)
                                        end
                                    end
                                }
                            end,
                            Label = function(text, alignment)
                                local Label = Instance.new("Frame")
                                local TextLabel = Instance.new("TextLabel")
                                
                                Label.Name = "Label"
                                Label.Parent = ScrollingFrame
                                Label.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
                                Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                Label.BorderSizePixel = 0
                                Label.Size = UDim2.new(1, -17, 0, 20)
                                
                                TextLabel.Parent = Label
                                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                TextLabel.BackgroundTransparency = 1.000
                                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                                TextLabel.BorderSizePixel = 0
                                TextLabel.Size = UDim2.new(1, 0, 1, 0)
                                TextLabel.Font = Enum.Font.Gotham
                                TextLabel.Text = text
                                TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
                                TextLabel.TextSize = 14.000
                                
                                -- Set alignment
                                if alignment == "Center" then
                                    TextLabel.TextXAlignment = Enum.TextXAlignment.Center
                                elseif alignment == "Right" then
                                    TextLabel.TextXAlignment = Enum.TextXAlignment.Right
                                else -- Default to Left
                                    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
                                end
                                
                                return {
                                    Set = function(newText)
                                        TextLabel.Text = newText
                                    end
                                }
                            end
                        }
                    end
                }
            end,
            Destroy = function()
                SynthUI:Destroy()
            end,
            Toggle = function()
                SynthUI.Enabled = not SynthUI.Enabled
            end
        }
    end
}

return lib
