pcall(function()
	if game["Run Service"]:IsStudio() then
		game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Synth"):Destroy()
	end
end)

local TweenSevrice = game:GetService("TweenService")
local Run = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local Info = TweenInfo.new(0.1, Enum.EasingStyle.Sine)
local function Tween(Object, Properties, Info2)
	local Tw = TweenSevrice:Create(Object, Info2 or Info, Properties)
	Tw:Play()
	return Tw
end

local lib = {
	Window = function(WindowName, Size)
		local Size = Size or UDim2.fromOffset(570, 340)
		local WindowName = WindowName or "Synth UI"
		
		local SynthUI = Instance.new("ScreenGui")
		local MainContainer = Instance.new("Frame")
		local Border = Instance.new("Frame")
		local RealContainer = Instance.new("Frame")
		local TopBar = Instance.new("Frame")
		local Banner = Instance.new("TextLabel")
		local UICorner = Instance.new("UICorner")
		local NavBar = Instance.new("Frame")
		local UICorner_2 = Instance.new("UICorner")
		local TabsImage = Instance.new("TextLabel")
		local CornerFix = Instance.new("Frame")
		local Tabs = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")
		local UICorner_3 = Instance.new("UICorner")
		local CornerArch = Instance.new("ImageLabel")
		local UICorner_4 = Instance.new("UICorner")
		local UIGradient_2 = Instance.new("UIGradient")
		local UICorner_5 = Instance.new("UICorner")
		local UICorner_6 = Instance.new("UICorner")
		local CloseButton = Instance.new("TextButton")
		local PlayerImage = Instance.new("ImageLabel")
		local Watermark = Instance.new("TextLabel")

		SynthUI.Name = "Synth"
		SynthUI.Parent = Run:IsStudio() and game.Players.LocalPlayer.PlayerGui or game.CoreGui
		SynthUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		SynthUI.ResetOnSpawn = false

		MainContainer.Name = "MainContainer"
		MainContainer.Parent = SynthUI
		MainContainer.AnchorPoint = Vector2.new(0.5, 0.5)
		MainContainer.BackgroundColor3 = Color3.fromRGB(44, 45, 44)
		MainContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainContainer.BorderSizePixel = 0
		MainContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
		MainContainer.Size = Size
		MainContainer.Active = true
		
		local function AddRipple(Button)
			local Clickbox
			if Button:IsA("TextButton") then 
				Clickbox = Button
			else
				Clickbox = Instance.new("TextButton", Button)
				Clickbox.Text = ""
				Clickbox.Size = UDim2.fromScale(1, 1)
				Clickbox.ZIndex = 2
				Clickbox.BackgroundTransparency = 1
			end
			Clickbox.MouseButton1Click:Connect(function()
				task.spawn(function()
					local mouse = game.Players.LocalPlayer:GetMouse()
					local Yes = Instance.new("Frame", Button)
					Yes.Position = UDim2.fromOffset(mouse.X - Button.AbsolutePosition.X, mouse.Y - Button.AbsolutePosition.Y)
					Yes.BackgroundColor3 = Color3.fromRGB(33, 97, 200)
					Yes.Size = UDim2.fromOffset(0, 0)
					Yes.AnchorPoint = Vector2.new(0.5, 0.5)

					local Corner = Instance.new("UICorner", Yes)
					Corner.CornerRadius = UDim.new(1, 0)

					Tween(Yes, {Size = UDim2.fromOffset(50, 50)}, TweenInfo.new(0.76, Enum.EasingStyle.Quint))
					Tween(Yes, {BackgroundTransparency = 1}, TweenInfo.new(0.76, Enum.EasingStyle.Quint))
					game.Debris:AddItem(Yes, 0.76)
				end)
			end)
			Button.ClipsDescendants = true
		end

		Border.Name = "Border"
		Border.Parent = MainContainer
		Border.AnchorPoint = Vector2.new(0.5, 0.5)
		Border.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Border.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Border.BorderSizePixel = 0
		Border.Position = UDim2.new(0.5, 0, 0.5, 0)
		Border.Size = UDim2.new(1, -8, 1, -8)

		RealContainer.Name = "RealContainer"
		RealContainer.Parent = Border
		RealContainer.AnchorPoint = Vector2.new(0.5, 0.5)
		RealContainer.BackgroundColor3 = Color3.fromRGB(44, 45, 44)
		RealContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
		RealContainer.BorderSizePixel = 0
		RealContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
		RealContainer.Size = UDim2.new(1, -4, 1, -4)

		TopBar.Name = "TopBar"
		TopBar.Parent = RealContainer
		TopBar.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
		TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TopBar.BorderSizePixel = 0
		TopBar.Position = UDim2.new(0, 5, 0, 5)
		TopBar.Size = UDim2.new(1, -10, 0, 35)

		Banner.Name = "Banner"
		Banner.Parent = TopBar
		Banner.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Banner.BackgroundTransparency = 1.000
		Banner.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Banner.BorderSizePixel = 0
		Banner.Position = UDim2.new(0, 5, 0, 5)
		Banner.Size = UDim2.new(0, 200, 0, 25)
		Banner.Font = Enum.Font.GothamBold
		Banner.Text = WindowName
		Banner.TextColor3 = Color3.fromRGB(220, 220, 220)
		Banner.TextSize = 14.000
		Banner.TextXAlignment = Enum.TextXAlignment.Left

		UICorner.CornerRadius = UDim.new(0, 6)
		UICorner.Parent = TopBar

		NavBar.Name = "NavBar"
		NavBar.Parent = RealContainer
		NavBar.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
		NavBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
		NavBar.BorderSizePixel = 0
		NavBar.Position = UDim2.new(0, 5, 0, 40)
		NavBar.Size = UDim2.new(0, 135, 1, -45)

		UICorner_2.CornerRadius = UDim.new(0, 6)
		UICorner_2.Parent = NavBar

		TabsImage.Name = "TabsImage"
		TabsImage.Parent = NavBar
		TabsImage.BackgroundColor3 = Color3.fromRGB(126, 126, 126)
		TabsImage.BackgroundTransparency = 1.000
		TabsImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TabsImage.BorderSizePixel = 0
		TabsImage.Position = UDim2.new(0, 5, 0, 5)
		TabsImage.Size = UDim2.new(0, 60, 0, 15)
		TabsImage.Font = Enum.Font.GothamBold
		TabsImage.Text = "TABS"
		TabsImage.TextColor3 = Color3.fromRGB(156, 156, 156)
		TabsImage.TextSize = 12.000
		TabsImage.TextXAlignment = Enum.TextXAlignment.Left

		CornerFix.Name = "CornerFix"
		CornerFix.Parent = NavBar
		CornerFix.AnchorPoint = Vector2.new(1, 0)
		CornerFix.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
		CornerFix.BorderColor3 = Color3.fromRGB(0, 0, 0)
		CornerFix.BorderSizePixel = 0
		CornerFix.Position = UDim2.new(1, 0, 0, 0)
		CornerFix.Size = UDim2.new(0, 4, 0, 4)

		Tabs.Name = "Tabs"
		Tabs.Parent = NavBar
		Tabs.Active = true
		Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tabs.BackgroundTransparency = 1.000
		Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Tabs.BorderSizePixel = 0
		Tabs.Position = UDim2.new(0, 5, 0, 30)
		Tabs.Size = UDim2.new(1, -20, 1, -35)
		Tabs.ScrollBarThickness = 3
		Tabs.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)

		UIListLayout.Parent = Tabs
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 3)

		UICorner_3.CornerRadius = UDim.new(0, 6)
		UICorner_3.Parent = RealContainer

		CornerArch.Name = "CornerArch"
		CornerArch.Parent = RealContainer
		CornerArch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		CornerArch.BackgroundTransparency = 1.000
		CornerArch.BorderColor3 = Color3.fromRGB(0, 0, 0)
		CornerArch.BorderSizePixel = 0
		CornerArch.Position = UDim2.new(0, 137, 0, 37)
		CornerArch.Size = UDim2.new(0, 15, 0, 15)
		CornerArch.Image = "rbxassetid://117509933334518"
		CornerArch.ImageColor3 = Color3.fromRGB(39, 40, 39)
		CornerArch.Visible = false

		UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(44, 174, 255)), ColorSequenceKeypoint.new(0.42, Color3.fromRGB(82, 212, 255)), ColorSequenceKeypoint.new(0.47, Color3.fromRGB(42, 92, 255)), ColorSequenceKeypoint.new(0.52, Color3.fromRGB(82, 212, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(123, 253, 255))}
		UIGradient_2.Rotation = -180
		UIGradient_2.Parent = Border

		UICorner_5.CornerRadius = UDim.new(0, 6)
		UICorner_5.Parent = Border

		UICorner_6.Parent = MainContainer
		
		-- Close button for mobile
		CloseButton.Name = "CloseButton"
		CloseButton.Parent = TopBar
		CloseButton.AnchorPoint = Vector2.new(1, 0.5)
		CloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		CloseButton.BackgroundTransparency = 1.000
		CloseButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		CloseButton.BorderSizePixel = 0
		CloseButton.Position = UDim2.new(1, -5, 0.5, 0)
		CloseButton.Size = UDim2.new(0, 20, 0, 20)
		CloseButton.Font = Enum.Font.GothamBold
		CloseButton.Text = "X"
		CloseButton.TextColor3 = Color3.fromRGB(220, 220, 220)
		CloseButton.TextSize = 14.000
		CloseButton.Visible = UserInputService.TouchEnabled
		
		CloseButton.MouseButton1Click:Connect(function()
			MainContainer.Visible = not MainContainer.Visible
		end)
		
		-- Player profile image
		PlayerImage.Name = "PlayerImage"
		PlayerImage.Parent = RealContainer
		PlayerImage.AnchorPoint = Vector2.new(0, 1)
		PlayerImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		PlayerImage.BackgroundTransparency = 1.000
		PlayerImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
		PlayerImage.BorderSizePixel = 0
		PlayerImage.Position = UDim2.new(0, 5, 1, -5)
		PlayerImage.Size = UDim2.new(0, 30, 0, 30)
		PlayerImage.Image = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("Head") and Players.LocalPlayer.Character.Head:FindFirstChild("Face") and Players.LocalPlayer.Character.Head.Face.Texture or "rbxassetid://0"
		PlayerImage.ImageColor3 = Color3.fromRGB(255, 255, 255)
		
		-- Watermark
		Watermark.Name = "Watermark"
		Watermark.Parent = RealContainer
		Watermark.AnchorPoint = Vector2.new(1, 1)
		Watermark.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Watermark.BackgroundTransparency = 1.000
		Watermark.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Watermark.BorderSizePixel = 0
		Watermark.Position = UDim2.new(1, -5, 1, -5)
		Watermark.Size = UDim2.new(0, 200, 0, 20)
		Watermark.Font = Enum.Font.Gotham
		Watermark.Text = "Synth UI | v1.0"
		Watermark.TextColor3 = Color3.fromRGB(150, 150, 150)
		Watermark.TextSize = 12.000
		Watermark.TextXAlignment = Enum.TextXAlignment.Right

		do 
			local UIS = game:GetService("UserInputService")
			local function dragify(Drag, Frame)
				local dragToggle = nil
				local dragSpeed = 0.08
				local dragInput = nil
				local dragStart = nil
				local dragPos = nil
				local Delta, Position, startPos
				local function updateInput(input)
					Delta = input.Position - dragStart
					Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
					game:GetService("TweenService"):Create(Frame, TweenInfo.new(dragSpeed), {Position = Position}):Play()
				end
				Drag.InputBegan:Connect(function(input)
					if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
						dragToggle = true
						dragStart = input.Position
						startPos = Frame.Position
						input.Changed:Connect(function()
							if input.UserInputState == Enum.UserInputState.End then
								dragToggle = false
							end
						end)
					end
				end)
				Drag.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
						dragInput = input
					end
				end)
				UIS.InputChanged:Connect(function(input)
					if input == dragInput and dragToggle then
						updateInput(input)
					end
				end)
			end
			dragify(TopBar, MainContainer)
		end
		
		spawn(function() -- UIGradient_2.GradientCycle 
			while task.wait() do
				local rotation = UIGradient_2.Rotation
				if rotation == 180 then
					rotation = -181
				else	
					rotation = rotation + 1
				end
				UIGradient_2.Rotation = rotation
			end
		end)
		
		local TabsTable = {}
		
		return {
			Tab = function(name)
				local AutoFarm = Instance.new("Frame")
				local TextLabel = Instance.new("TextButton")
				local UIGradient = Instance.new("UIGradient")
				local AutoFarmContent = Instance.new("Frame")
				local ScrollingFrame = Instance.new("ScrollingFrame")
				local UIListLayout_2 = Instance.new("UIListLayout")
				
				AutoFarm.Name = name
				AutoFarm.Parent = Tabs
				AutoFarm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				AutoFarm.BackgroundTransparency = 1.000
				AutoFarm.BorderColor3 = Color3.fromRGB(0, 0, 0)
				AutoFarm.BorderSizePixel = 0
				AutoFarm.Size = UDim2.new(1, 0, 0, 21)

				TextLabel.Parent = AutoFarm
				TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel.BackgroundTransparency = 1.000
				TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
				TextLabel.BorderSizePixel = 0
				TextLabel.Size = UDim2.new(1, 0, 1, 0)
				TextLabel.Font = Enum.Font.GothamBold
				TextLabel.Text = name
				TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
				TextLabel.TextSize = 14.000
				TextLabel.TextXAlignment = Enum.TextXAlignment.Left

				UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(44, 174, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(123, 253, 255))}
				UIGradient.Rotation = -180
				UIGradient.Parent = TextLabel
				UIGradient.Enabled = false
				
				AutoFarmContent.Name = "AutoFarmContent"
				AutoFarmContent.Parent = RealContainer
				AutoFarmContent.BackgroundColor3 = Color3.fromRGB(41, 42, 41)
				AutoFarmContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
				AutoFarmContent.BorderSizePixel = 0
				AutoFarmContent.Position = UDim2.new(0, 147, 0, 47)
				AutoFarmContent.Size = UDim2.new(1, -160, 1, -57)
				AutoFarmContent.Visible = false

				UICorner_4.CornerRadius = UDim.new(0, 6)
				UICorner_4.Parent = AutoFarmContent

				ScrollingFrame.Parent = AutoFarmContent
				ScrollingFrame.Active = true
				ScrollingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ScrollingFrame.BackgroundTransparency = 1.000
				ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
				ScrollingFrame.BorderSizePixel = 0
				ScrollingFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				ScrollingFrame.Size = UDim2.new(1, -10, 1, -10)
				ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
				ScrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
				ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(93, 93, 93)
				ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
				ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
				ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
				ScrollingFrame.CanvasSize = UDim2.fromScale(0, 0)

				UIListLayout_2.Parent = ScrollingFrame
				UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_2.Padding = UDim.new(0, 6)
				
				local Tcount = #TabsTable + 1
				local G = {
					frame = AutoFarm,
					content = AutoFarmContent,
				}
				TabsTable[Tcount] = G
				
				local function onclick()
					(function()
						AutoFarmContent.Visible = true
						UIGradient.Enabled = true
						local Tw = Tween(TextLabel, {Position = UDim2.fromOffset(4, 0)})
						Tw.Completed:Once(function(Playback)
							Tween(TextLabel, {Position = UDim2.fromOffset(0, 0)})
						end)
						for i, Tab in pairs(TabsTable) do
							if Tab ~= TabsTable[Tcount] then
								Tween(Tab.frame.TextButton, {Position = UDim2.fromOffset(0, 0)})
								Tab.frame.TextButton.UIGradient.Enabled = false
								Tab.content.Visible = false
							end
						end

					end)()
				end
				if Tcount == 1 then
					onclick()
				end
				TextLabel.MouseButton1Click:Connect(onclick)
				
				return {
					Section = function(name)
						local Section = Instance.new("Frame")
						local Section_2 = Instance.new("TextLabel")
						local Frame = Instance.new("Frame")
						local UICorner = Instance.new("UICorner")

						Section.Name = "Section"
						Section.Parent = ScrollingFrame
						Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						Section.BackgroundTransparency = 1.000
						Section.BorderColor3 = Color3.fromRGB(0, 0, 0)
						Section.BorderSizePixel = 0
						Section.Size = UDim2.new(1, -17, 0, 30)

						Section_2.Name = "Section"
						Section_2.Parent = Section
						Section_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						Section_2.BackgroundTransparency = 1.000
						Section_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
						Section_2.BorderSizePixel = 0
						Section_2.Size = UDim2.new(1, 0, 0, 20)
						Section_2.Font = Enum.Font.GothamBold
						Section_2.Text = name
						Section_2.TextColor3 = Color3.fromRGB(220, 220, 220)
						Section_2.TextSize = 14.000
						Section_2.TextXAlignment = Enum.TextXAlignment.Left

						Frame.Parent = Section_2
						Frame.AnchorPoint = Vector2.new(0, 1)
						Frame.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
						Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
						Frame.BorderSizePixel = 0
						Frame.Position = UDim2.new(0, 0, 1, 0)
						Frame.Size = UDim2.new(1, 0, 0, 1)

						UICorner.CornerRadius = UDim.new(0, 1)
						UICorner.Parent = Frame
						
						return {
							Label = function(text, alignment)
								local alignment = alignment or "Left"
								local Label = Instance.new("TextLabel")
								
								Label.Name = "Label"
								Label.Parent = ScrollingFrame
								Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								Label.BackgroundTransparency = 1.000
								Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Label.BorderSizePixel = 0
								Label.Size = UDim2.new(1, -17, 0, 20)
								Label.Font = Enum.Font.Gotham
								Label.Text = text
								Label.TextColor3 = Color3.fromRGB(220, 220, 220)
								Label.TextSize = 14.000
								
								if alignment == "Center" then
									Label.TextXAlignment = Enum.TextXAlignment.Center
								elseif alignment == "Right" then
									Label.TextXAlignment = Enum.TextXAlignment.Right
								else
									Label.TextXAlignment = Enum.TextXAlignment.Left
								end
							end,
							Toggle = function(name, callback, default)
								local Enabled = default or false
								local Toggle = Instance.new("Frame")
								local UICorner = Instance.new("UICorner")
								local TextLabel = Instance.new("TextLabel")
								local Frame = Instance.new("Frame")
								local UICorner_2 = Instance.new("UICorner")
								local Frame_2 = Instance.new("Frame")
								local UICorner_3 = Instance.new("UICorner")

								Toggle.Name = "Toggle"
								Toggle.Parent = ScrollingFrame
								Toggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Toggle.BorderSizePixel = 0
								Toggle.Size = UDim2.new(1, -17, 0, 30)

								UICorner.CornerRadius = UDim.new(0, 4)
								UICorner.Parent = Toggle

								TextLabel.Parent = Toggle
								TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel.BackgroundTransparency = 1.000
								TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel.BorderSizePixel = 0
								TextLabel.Position = UDim2.new(0, 8, 0, 0)
								TextLabel.Size = UDim2.new(1, -100, 1, 0)
								TextLabel.Font = Enum.Font.GothamBold
								TextLabel.Text = name
								TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel.TextSize = 14.000
								TextLabel.TextXAlignment = Enum.TextXAlignment.Left

								Frame.Parent = Toggle
								Frame.AnchorPoint = Vector2.new(1, 0.5)
								Frame.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
								Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Frame.BorderSizePixel = 0
								Frame.Position = UDim2.new(1, -8, 0.5, 0)
								Frame.Size = UDim2.new(0, 50, 0, 21)

								UICorner_2.CornerRadius = UDim.new(1, 0)
								UICorner_2.Parent = Frame

								Frame_2.Parent = Frame
								Frame_2.AnchorPoint = Vector2.new(0, 0.5)
								Frame_2.BackgroundColor3 = Color3.fromRGB(47, 148, 198)
								Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Frame_2.BorderSizePixel = 0
								Frame_2.Position = UDim2.new(0, 5, 0.5, 0)
								Frame_2.Size = UDim2.new(0, 15, 0, 15)

								UICorner_3.CornerRadius = UDim.new(1, 0)
								UICorner_3.Parent = Frame_2
								
								if default then
									Frame.BackgroundColor3 = Color3.fromRGB(46, 47, 46)
									Frame_2.BackgroundColor3 = Color3.fromRGB(52, 164, 216)
									Frame_2.Position = UDim2.new(1, -20, 0.5, 0)
								end
								
								local Clickbox = Instance.new("TextButton", Toggle)
								Clickbox.Text = ""
								Clickbox.Size = UDim2.fromScale(1, 1)
								Clickbox.ZIndex = 2
								Clickbox.BackgroundTransparency = 1
								Clickbox.MouseButton1Click:Connect(function()
									Enabled = not Enabled
									local Tweens = {
										[true] = {
											function()
												Tween(Frame, {BackgroundColor3 = Color3.fromRGB(46, 47, 46)})
											end,
											function()
												Tween(Frame_2, {BackgroundColor3 = Color3.fromRGB(52, 164, 216), Position = UDim2.new(1, -20, 0.5, 0)})
											end,
										},
										[false] = {
											function()
												Tween(Frame, {BackgroundColor3 = Color3.fromRGB(39, 40, 39)})
											end,
											function()
												Tween(Frame_2, {BackgroundColor3 = Color3.fromRGB(47, 148, 198), Position = UDim2.new(0, 5, 0.5, 0)})
											end,
										}
									}
									for i, Tween in pairs(Tweens[Enabled]) do
										Tween()
									end
									callback(Enabled)
								end)
								
								AddRipple(Clickbox)
								
								return {
									Set = function(state)
										Enabled = state
										local Tweens = {
											[true] = {
												function()
													Tween(Frame, {BackgroundColor3 = Color3.fromRGB(46, 47, 46)})
												end,
												function()
													Tween(Frame_2, {BackgroundColor3 = Color3.fromRGB(52, 164, 216), Position = UDim2.new(1, -20, 0.5, 0)})
												end,
											},
											[false] = {
												function()
													Tween(Frame, {BackgroundColor3 = Color3.fromRGB(39, 40, 39)})
												end,
												function()
													Tween(Frame_2, {BackgroundColor3 = Color3.fromRGB(47, 148, 198), Position = UDim2.new(0, 5, 0.5, 0)})
												end,
											}
										}
										for i, Tween in pairs(Tweens[Enabled]) do
											Tween()
										end
										callback(Enabled)
									end
								}
							end,
							Button = function(name, callback)
								local Button = Instance.new("Frame")
								local UICorner = Instance.new("UICorner")
								local TextLabel = Instance.new("TextLabel")
								local ImageLabel = Instance.new("ImageLabel")
								Button.Name = "Button"
								Button.Parent = ScrollingFrame
								Button.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Button.BorderSizePixel = 0
								Button.Size = UDim2.new(1, -17, 0, 30)
								Button.ClipsDescendants = true

								UICorner.CornerRadius = UDim.new(0, 4)
								UICorner.Parent = Button

								TextLabel.Parent = Button
								TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel.BackgroundTransparency = 1.000
								TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel.BorderSizePixel = 0
								TextLabel.Position = UDim2.new(0, 8, 0, 0)
								TextLabel.Size = UDim2.new(1, -100, 1, 0)
								TextLabel.Font = Enum.Font.GothamBold
								TextLabel.Text = name
								TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel.TextSize = 14.000
								TextLabel.TextXAlignment = Enum.TextXAlignment.Left

								ImageLabel.Parent = Button
								ImageLabel.AnchorPoint = Vector2.new(1, 0.5)
								ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								ImageLabel.BackgroundTransparency = 1.000
								ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ImageLabel.BorderSizePixel = 0
								ImageLabel.Position = UDim2.new(1, -8, 0.5, 0)
								ImageLabel.Size = UDim2.new(0, 20, 0, 20)
								ImageLabel.Image = "rbxassetid://81903642911217"
								ImageLabel.ImageColor3 = Color3.fromRGB(52, 164, 216)
								
								local Clickbox = Instance.new("TextButton", Button)
								Clickbox.Text = ""
								Clickbox.Size = UDim2.fromScale(1, 1)
								Clickbox.ZIndex = 2
								Clickbox.BackgroundTransparency = 1
								Clickbox.MouseButton1Click:Connect(function()
									(callback or function() end)()
								end)
								
								AddRipple(Clickbox)
							end,
							Slider = function(name, min, max, def, callback)
								local Slider = Instance.new("Frame")
								local TextLabel = Instance.new("TextLabel")
								local Frame = Instance.new("Frame")
								local UICorner = Instance.new("UICorner")
								local Frame_2 = Instance.new("Frame")
								local UICorner_2 = Instance.new("UICorner")
								local TextLabel_2 = Instance.new("TextLabel")

								Slider.Name = "Slider"
								Slider.Parent = ScrollingFrame
								Slider.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Slider.BorderSizePixel = 0
								Slider.Size = UDim2.new(1, -17, 0, 30)

								TextLabel.Parent = Slider
								TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel.BackgroundTransparency = 1.000
								TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel.BorderSizePixel = 0
								TextLabel.Position = UDim2.new(0, 8, 0, 0)
								TextLabel.Size = UDim2.new(1, -100, 1, 0)
								TextLabel.Font = Enum.Font.GothamBold
								TextLabel.Text = name
								TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel.TextSize = 14.000
								TextLabel.TextXAlignment = Enum.TextXAlignment.Left

								Frame.Parent = Slider
								Frame.AnchorPoint = Vector2.new(1, 0.5)
								Frame.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
								Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Frame.BorderSizePixel = 0
								Frame.Position = UDim2.new(1, -8, 0.5, 0)
								Frame.Size = UDim2.new(0, 100, 0, 15)

								UICorner.CornerRadius = UDim.new(1, 0)
								UICorner.Parent = Frame

								Frame_2.Parent = Frame
								Frame_2.BackgroundColor3 = Color3.fromRGB(47, 148, 198)
								Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Frame_2.BorderSizePixel = 0
								Frame_2.Size = UDim2.new((def-min)/(max-min), 0, 1, 0)

								UICorner_2.CornerRadius = UDim.new(1, 0)
								UICorner_2.Parent = Frame_2

								TextLabel_2.Parent = Frame
								TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel_2.BackgroundTransparency = 1.000
								TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel_2.BorderSizePixel = 0
								TextLabel_2.Size = UDim2.new(1, 0, 1, 0)
								TextLabel_2.Font = Enum.Font.GothamBold
								TextLabel_2.Text = tostring(def)
								TextLabel_2.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel_2.TextSize = 14.000
								

								local ClickBox = Instance.new("TextButton")
								ClickBox.Parent = Frame
								ClickBox.Text = ""
								ClickBox.BackgroundTransparency = 1
								ClickBox.ZIndex = 1
								ClickBox.Size = UDim2.fromScale(1, 1)
								
								local Dragging = false
								local Last
								ClickBox.MouseButton1Down:Connect(function(Key)
									Dragging = true
									while Dragging do
										local Percent = math.clamp((game:GetService("Players").LocalPlayer:GetMouse().X - Frame.AbsolutePosition.X) / Frame.AbsoluteSize.X, 0, 1)
										local Value = min + (Percent*(max-min))
										TweenSevrice:Create(Frame_2, TweenInfo.new(0.1, Enum.EasingStyle.Quint), {Size = UDim2.fromScale(Percent, 1)}):Play()
										if math.floor(Value) ~= Last then
											TextLabel_2.Text = math.floor(Value);
											Last = math.floor(Value);
											(callback or function() end)(math.floor(Value))
										end
										task.wait()
									end
								end)
								game:GetService("UserInputService").InputEnded:Connect(function(Key)
									if Key.UserInputType == Enum.UserInputType.MouseButton1 or Key.UserInputType == Enum.UserInputType.Touch then
										Dragging = false
									end
								end)
								
								return {
									Set = function(value)
										local Percent = math.clamp((value-min)/(max-min), 0, 1)
										Frame_2.Size = UDim2.new(Percent, 0, 1, 0)
										TextLabel_2.Text = tostring(math.floor(value))
										callback(value)
									end
								}
							end,
							Dropdown = function(name, array, default, callback)
								local Dropdown = Instance.new("Frame")
								local TextLabel = Instance.new("TextLabel")
								local ImageLabel = Instance.new("ImageLabel")
								local ScrollingFrame2 = Instance.new("ScrollingFrame")
								local UIListLayout = Instance.new("UIListLayout")
								local TextLabel_2 = Instance.new("TextLabel")
								
								Dropdown.Name = "Dropdown"
								Dropdown.Parent = ScrollingFrame
								Dropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Dropdown.BorderSizePixel = 0
								Dropdown.Size = UDim2.new(1, -17, 0, 30)
								Dropdown.AutomaticSize = Enum.AutomaticSize.Y

								TextLabel.Parent = Dropdown
								TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel.BackgroundTransparency = 1.000
								TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel.BorderSizePixel = 0
								TextLabel.Position = UDim2.new(0, 8, 0, 0)
								TextLabel.Size = UDim2.new(1, -100, 0, 30)
								TextLabel.Font = Enum.Font.GothamBold
								TextLabel.Text = name
								TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel.TextSize = 14.000
								TextLabel.TextXAlignment = Enum.TextXAlignment.Left

								ImageLabel.Parent = Dropdown
								ImageLabel.AnchorPoint = Vector2.new(1, 0)
								ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								ImageLabel.BackgroundTransparency = 1.000
								ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ImageLabel.BorderSizePixel = 0
								ImageLabel.Position = UDim2.new(1, -8, 0, 6)
								ImageLabel.Size = UDim2.new(0, 20, 0, 20)
								ImageLabel.Image = "rbxassetid://70441862151102"
								ImageLabel.ImageColor3 = Color3.fromRGB(52, 164, 216)

								ScrollingFrame2.Parent = Dropdown
								ScrollingFrame2.Active = true
								ScrollingFrame2.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								ScrollingFrame2.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ScrollingFrame2.BorderSizePixel = 0
								ScrollingFrame2.Position = UDim2.new(0, 0, 0, 30)
								ScrollingFrame2.Size = UDim2.new(1, 0, 0, 0)
								ScrollingFrame2.CanvasSize = UDim2.new(0, 0, 0, 0)
								ScrollingFrame2.ScrollBarThickness = 3
								ScrollingFrame2.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
								ScrollingFrame2.Visible = false

								UIListLayout.Parent = ScrollingFrame2
								UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

								TextLabel_2.Parent = Dropdown
								TextLabel_2.AnchorPoint = Vector2.new(1, 0)
								TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel_2.BackgroundTransparency = 1.000
								TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel_2.BorderSizePixel = 0
								TextLabel_2.Position = UDim2.new(1, -35, 0, 0)
								TextLabel_2.Size = UDim2.new(0, 100, 0, 30)
								TextLabel_2.Font = Enum.Font.GothamBold
								TextLabel_2.Text = tostring(default)
								TextLabel_2.TextColor3 = Color3.fromRGB(52, 164, 216)
								TextLabel_2.TextSize = 14.000
								TextLabel_2.TextXAlignment = Enum.TextXAlignment.Right
								
								local IsOpen = false
								local function magic()
									IsOpen = not IsOpen
									ImageLabel.Rotation = IsOpen and 180 or 0
									ScrollingFrame2.Visible = IsOpen
									if IsOpen then
										Dropdown.Size = UDim2.new(1, -17, 0, 30 + math.min(100, #array * 21 + 5))
										ScrollingFrame2.Size = UDim2.new(1, 0, 0, math.min(100, #array * 21 + 5))
										ScrollingFrame2.CanvasSize = UDim2.new(0, 0, 0, #array * 21 + 5)
									else
										Dropdown.Size = UDim2.new(1, -17, 0, 30)
									end
								end

								for i,v in pairs(array) do
									local TextButton = Instance.new("TextButton")
									TextButton.Parent = ScrollingFrame2
									TextButton.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
									TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
									TextButton.BorderSizePixel = 0
									TextButton.Size = UDim2.new(1, -5, 0, 21)
									TextButton.AutoButtonColor = false
									TextButton.Font = Enum.Font.Gotham
									TextButton.Text = tostring(v)
									TextButton.TextColor3 = Color3.fromRGB(208, 208, 208)
									TextButton.TextSize = 14.000
									
									TextButton.MouseButton1Click:Connect(function()
										magic()
										TextLabel_2.Text = tostring(v)
										callback(v)
									end)
								end
								
								local Clickbox = Instance.new("TextButton", Dropdown)
								Clickbox.Text = ""
								Clickbox.Size = UDim2.new(1, -17, 0, 30)
								Clickbox.ZIndex = 2
								Clickbox.BackgroundTransparency = 1
								Clickbox.MouseButton1Click:Connect(magic)

								AddRipple(Clickbox)
								
								return {
									Refresh = function(newArray)
										for i,v in pairs(ScrollingFrame2:GetChildren()) do
											if v:IsA("TextButton") then
												v:Destroy()
											end
										end
										
										for i,v in pairs(newArray) do
											local TextButton = Instance.new("TextButton")
											TextButton.Parent = ScrollingFrame2
											TextButton.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
											TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
											TextButton.BorderSizePixel = 0
											TextButton.Size = UDim2.new(1, -5, 0, 21)
											TextButton.AutoButtonColor = false
											TextButton.Font = Enum.Font.Gotham
											TextButton.Text = tostring(v)
											TextButton.TextColor3 = Color3.fromRGB(208, 208, 208)
											TextButton.TextSize = 14.000
											
											TextButton.MouseButton1Click:Connect(function()
												magic()
												TextLabel_2.Text = tostring(v)
												callback(v)
											end)
										end
									end
								}
							end,
							ColorPicker = function(name, default, callback)
								local ColorPicker = Instance.new("Frame")
								local TextLabel = Instance.new("TextLabel")
								local Preview = Instance.new("Frame")
								local UICorner = Instance.new("UICorner")
								local ColorPickerFrame = Instance.new("Frame")
								local ColorWheel = Instance.new("ImageLabel")
								local Cursor = Instance.new("Frame")
								local UICorner_2 = Instance.new("UICorner")
								local BrightnessSlider = Instance.new("Frame")
								local UICorner_3 = Instance.new("UICorner")
								local UIGradient = Instance.new("UIGradient")
								local SliderCursor = Instance.new("Frame")
								local UICorner_4 = Instance.new("UICorner")
								local CurrentColor = Instance.new("Frame")
								local UICorner_5 = Instance.new("UICorner")
								local HexInput = Instance.new("TextBox")
								local UICorner_6 = Instance.new("UICorner")
								
								local isOpen = false
								local currentColor = default or Color3.fromRGB(255, 0, 0)
								local brightness = 1
								
								ColorPicker.Name = "ColorPicker"
								ColorPicker.Parent = ScrollingFrame
								ColorPicker.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								ColorPicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ColorPicker.BorderSizePixel = 0
								ColorPicker.Size = UDim2.new(1, -17, 0, 30)
								
								TextLabel.Parent = ColorPicker
								TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								TextLabel.BackgroundTransparency = 1.000
								TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								TextLabel.BorderSizePixel = 0
								TextLabel.Position = UDim2.new(0, 8, 0, 0)
								TextLabel.Size = UDim2.new(1, -100, 1, 0)
								TextLabel.Font = Enum.Font.GothamBold
								TextLabel.Text = name
								TextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
								TextLabel.TextSize = 14.000
								TextLabel.TextXAlignment = Enum.TextXAlignment.Left
								
								Preview.Parent = ColorPicker
								Preview.AnchorPoint = Vector2.new(1, 0.5)
								Preview.BackgroundColor3 = currentColor
								Preview.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Preview.BorderSizePixel = 0
								Preview.Position = UDim2.new(1, -8, 0.5, 0)
								Preview.Size = UDim2.new(0, 50, 0, 21)
								
								UICorner.CornerRadius = UDim.new(0, 4)
								UICorner.Parent = Preview
								
								ColorPickerFrame.Name = "ColorPickerFrame"
								ColorPickerFrame.Parent = ColorPicker
								ColorPickerFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
								ColorPickerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ColorPickerFrame.BorderSizePixel = 0
								ColorPickerFrame.Position = UDim2.new(0, 0, 1, 5)
								ColorPickerFrame.Size = UDim2.new(1, 0, 0, 120)
								ColorPickerFrame.Visible = false
								
								ColorWheel.Name = "ColorWheel"
								ColorWheel.Parent = ColorPickerFrame
								ColorWheel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								ColorWheel.BorderColor3 = Color3.fromRGB(0, 0, 0)
								ColorWheel.BorderSizePixel = 0
								ColorWheel.Position = UDim2.new(0, 5, 0, 5)
								ColorWheel.Size = UDim2.new(0, 80, 0, 80)
								ColorWheel.Image = "rbxassetid://14284831301" -- Color wheel image
								
								Cursor.Name = "Cursor"
								Cursor.Parent = ColorWheel
								Cursor.AnchorPoint = Vector2.new(0.5, 0.5)
								Cursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								Cursor.BorderColor3 = Color3.fromRGB(0, 0, 0)
								Cursor.BorderSizePixel = 2
								Cursor.Position = UDim2.new(0.5, 0, 0.5, 0)
								Cursor.Size = UDim2.new(0, 8, 0, 8)
								
								UICorner_2.CornerRadius = UDim.new(1, 0)
								UICorner_2.Parent = Cursor
								
								BrightnessSlider.Name = "BrightnessSlider"
								BrightnessSlider.Parent = ColorPickerFrame
								BrightnessSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								BrightnessSlider.BorderColor3 = Color3.fromRGB(0, 0, 0)
								BrightnessSlider.BorderSizePixel = 0
								BrightnessSlider.Position = UDim2.new(0, 90, 0, 5)
								BrightnessSlider.Size = UDim2.new(0, 15, 0, 80)
								
								UICorner_3.CornerRadius = UDim.new(1, 0)
								UICorner_3.Parent = BrightnessSlider
								
								UIGradient.Color = ColorSequence.new{
									ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
									ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
								}
								UIGradient.Rotation = 90
								UIGradient.Parent = BrightnessSlider
								
								SliderCursor.Name = "SliderCursor"
								SliderCursor.Parent = BrightnessSlider
								SliderCursor.AnchorPoint = Vector2.new(0.5, 0)
								SliderCursor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
								SliderCursor.BorderColor3 = Color3.fromRGB(0, 0, 0)
								SliderCursor.BorderSizePixel = 2
								SliderCursor.Position = UDim2.new(0.5, 0, brightness, 0)
								SliderCursor.Size = UDim2.new(1, 2, 0, 8)
								
								UICorner_4.CornerRadius = UDim.new(1, 0)
								UICorner_4.Parent = SliderCursor
								
								CurrentColor.Name = "CurrentColor"
								CurrentColor.Parent = ColorPickerFrame
								CurrentColor.BackgroundColor3 = currentColor
								CurrentColor.BorderColor3 = Color3.fromRGB(0, 0, 0)
								CurrentColor.BorderSizePixel = 0
								CurrentColor.Position = UDim2.new(0, 110, 0, 5)
								CurrentColor.Size = UDim2.new(0, 50, 0, 50)
								
								UICorner_5.CornerRadius = UDim.new(0, 4)
								UICorner_5.Parent = CurrentColor
								
								HexInput.Name = "HexInput"
								HexInput.Parent = ColorPickerFrame
								HexInput.BackgroundColor3 = Color3.fromRGB(39, 40, 39)
								HexInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
								HexInput.BorderSizePixel = 0
								HexInput.Position = UDim2.new(0, 110, 0, 60)
								HexInput.Size = UDim2.new(0, 50, 0, 25)
								HexInput.Font = Enum.Font.Gotham
								HexInput.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
								HexInput.PlaceholderText = "HEX"
								HexInput.Text = "#" .. tostring(currentColor):sub(6)
								HexInput.TextColor3 = Color3.fromRGB(220, 220, 220)
								HexInput.TextSize = 12.000
								
								UICorner_6.CornerRadius = UDim.new(0, 4)
								UICorner_6.Parent = HexInput
								
								local function updateColor(hue, sat, val)
									currentColor = Color3.fromHSV(hue, sat, val)
									Preview.BackgroundColor3 = currentColor
									CurrentColor.BackgroundColor3 = currentColor
									HexInput.Text = "#" .. tostring(currentColor):sub(6)
									callback(currentColor)
								end
								
								local function setColorFromWheel(x, y)
									local wheelX = (x - ColorWheel.AbsolutePosition.X) / ColorWheel.AbsoluteSize.X
									local wheelY = (y - ColorWheel.AbsolutePosition.Y) / ColorWheel.AbsoluteSize.Y
									
									local hue = math.atan2(wheelY - 0.5, wheelX - 0.5) / (2 * math.pi)
									if hue < 0 then hue = hue + 1 end
									
									local distance = math.sqrt((wheelX - 0.5)^2 + (wheelY - 0.5)^2)
									local saturation = math.clamp(distance * 2, 0, 1)
									
									Cursor.Position = UDim2.new(wheelX, 0, wheelY, 0)
									updateColor(hue, saturation, brightness)
								end
								
								local function setBrightness(y)
									local sliderY = (y - BrightnessSlider.AbsolutePosition.Y) / BrightnessSlider.AbsoluteSize.Y
									brightness = 1 - math.clamp(sliderY, 0, 1)
									SliderCursor.Position = UDim2.new(0.5, 0, brightness, 0)
									
									local h, s = Color3.toHSV(currentColor)
									updateColor(h, s, brightness)
								end
								
								ColorWheel.InputBegan:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseButton1 then
										local x, y = input.Position.X, input.Position.Y
										setColorFromWheel(x, y)
										
										local connection
										connection = input.Changed:Connect(function()
											if input.UserInputState == Enum.UserInputState.End then
												connection:Disconnect()
											end
										end)
									end
								end)
								
								ColorWheel.InputChanged:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseMovement then
										local x, y = input.Position.X, input.Position.Y
										setColorFromWheel(x, y)
									end
								end)
								
								BrightnessSlider.InputBegan:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseButton1 then
										local y = input.Position.Y
										setBrightness(y)
										
										local connection
										connection = input.Changed:Connect(function()
											if input.UserInputState == Enum.UserInputState.End then
												connection:Disconnect()
											end
										end)
									end
								end)
								
								BrightnessSlider.InputChanged:Connect(function(input)
									if input.UserInputType == Enum.UserInputType.MouseMovement then
										local y = input.Position.Y
										setBrightness(y)
									end
								end)
								
								HexInput.FocusLost:Connect(function()
									local hex = HexInput.Text:gsub("#", "")
									if hex:match("^[0-9A-Fa-f]+$") and #hex == 6 then
										local r = tonumber(hex:sub(1, 2), 16) / 255
										local g = tonumber(hex:sub(3, 4), 16) / 255
										local b = tonumber(hex:sub(5, 6), 16) / 255
										local newColor = Color3.new(r, g, b)
										currentColor = newColor
										Preview.BackgroundColor3 = newColor
										CurrentColor.BackgroundColor3 = newColor
										callback(newColor)
										
										local h, s, v = Color3.toHSV(newColor)
										brightness = v
										Cursor.Position = UDim2.new(0.5 + (math.cos(h * 2 * math.pi) * (s / 2), 0, 0.5 + (math.sin(h * 2 * math.pi) * (s / 2), 0)
										SliderCursor.Position = UDim2.new(0.5, 0, brightness, 0)
									else
										HexInput.Text = "#" .. tostring(currentColor):sub(6)
									end
								end)
								
								local Clickbox = Instance.new("TextButton", ColorPicker)
								Clickbox.Text = ""
								Clickbox.Size = UDim2.new(1, -17, 0, 30)
								Clickbox.ZIndex = 2
								Clickbox.BackgroundTransparency = 1
								Clickbox.MouseButton1Click:Connect(function()
									isOpen = not isOpen
									ColorPickerFrame.Visible = isOpen
									if isOpen then
										ColorPicker.Size = UDim2.new(1, -17, 0, 155)
									else
										ColorPicker.Size = UDim2.new(1, -17, 0, 30)
									end
								end)
								
								return {
									Set = function(color)
										currentColor = color
										Preview.BackgroundColor3 = color
										CurrentColor.BackgroundColor3 = color
										HexInput.Text = "#" .. tostring(color):sub(6)
										callback(color)
										
										local h, s, v = Color3.toHSV(color)
										brightness = v
										Cursor.Position = UDim2.new(0.5 + (math.cos(h * 2 * math.pi) * (s / 2), 0, 0.5 + (math.sin(h * 2 * math.pi) * (s / 2), 0)
										SliderCursor.Position = UDim2.new(0.5, 0, brightness, 0)
									end
								}
							end
						}
					end
				}
			end,
		}
	end,
}

return lib
